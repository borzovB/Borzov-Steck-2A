package asd; // определение пакета

class Steck { // объявление класса "Стeк"
    public int M; // количество элементов в стеке
    public int Arra[]; // массив для хранения элементов стека
    public int i; // индекс вершины стека

    public Steck(int n) { // конструктор класса "Стeк" с одним параметром - количеством элементов
        this.M = n; // инициализация количества элементов
        Arra = new int[M]; // выделение памяти под массив элементов стека
        i = -1; // начальное значение индекса -1
    }

    public void push(int el) { // метод добавления элемента в стек
        if (poln()) { // если стек полон
            System.out.println("Ошибка: стек переполнен"); // выводим сообщение об ошибке
            return; // завершаем работу метода
        }
        Arra[++i] = el; // добавляем элемент в стек
    }

    public int pop() { // метод удаления элемента из стека
        if (net()) { // если стек пуст
            System.out.println("Ошибка: стек пуст"); // выводим сообщение об ошибке
            return -1; // возвращаем -1
        }
        return Arra[i--]; // удаляем последний добавленный элемент и возвращаем его
    }

    public boolean net() { // метод проверки наличия элементов в стеке
        return i == -1; // если индекс вершины стека равен -1, то стек пуст, возвращаем true, иначе false
    }

    public boolean poln() { // метод проверки заполнения стека
        return i == M-1; // если индекс вершины стека равен (количеству элементов - 1), то стек полон, возвращаем true, иначе false
    }
}

public class ASD { // класс с методом main
    public static void main(String[] args) {
        Steck s = new Steck(10); // создание стека с 10 элементами

        s.push(7); // добавление элемента в стек
        s.push(890); // добавление элемента в стек
        s.push(333); // добавление элемента в стек
        s.push(34444); // добавление элемента в стек
        s.push(3); // добавление элемента в стек
        s.push(234); // добавление элемента в стек

        System.out.println("Stack without top element:"); // выводим сообщение

        while (!s.net()) { // пока стек не пуст
            int rez = s.pop(); // удаляем последний добавленный элемент и присваиваем его значение переменной rez
            System.out.println(rez); // выводим значение элемента на экран
        }
    }
}
